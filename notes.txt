test
test@test.com
pass: test

999,999.99


(locals.message) can be used as shorthand for (typeof message !== 'undefined')

<%= `"${row.last_updated}"` %>

Tasks:
1. Shopping list, do all items first, then add tab system for which categories to shop for. maybe store the shopping list in Vuex store?
Parent Purchasing.vue will query for names of tags from DB. GET /api/tags/inventory  . Make the tabs for all the tag names, handle which index tab is currently selected,
	default to 0 position at beginning
2. Tagging system
2a. Add validator to tags, cant allow comma to be in tag's name
3. Login/auth


work out how to add is-active to the tag/tab clicked

Get the child to emit an event when "refresh/reset" button in clicked, then hit fetchItemsFromAPI again.


How to update an item's tags? Everytime a form is submitted, the user will provide the updated list of tags that the list should keep. (compare their old tags with new 
tags from form before making a DB call? to improve performance).
With this response that consists of item's ID, and an array of wanted tags, 

Get all of the item's current tags, and only keep the ones in wanted tags. i.e, DELETE the ones not found in wanted tags, add the ones found in wanted tags but not in item's
current tags.
^^^^^^^^^^^^^


we need to check if that item <-> tag relation already exists